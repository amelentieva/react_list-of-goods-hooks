{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,kBAAAA,E,iBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCR,SACEC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAEzB,OAAQH,GACN,KAAKT,EAASa,QACZF,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKhB,EAASkB,OACZP,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAO7D,OAAIb,EACKK,EAAaS,UAGfT,EAQcU,CACnBpB,EACAQ,EACAH,GAGF,OACE,sBAAKgB,UAAU,MAAf,WACIlB,GAEA,wBACEkB,UAAU,cACVC,KAAK,SACLC,QAAS,WACPnB,GAAYD,IAJhB,mBAWDA,GAEC,qCACE,sBAAKkB,UAAU,eAAf,UACE,wBACEA,UAAU,cACVC,KAAK,SACLC,QAAS,WACPd,EAAYV,EAASa,UAJzB,iCAUA,wBACES,UAAU,cACVC,KAAK,SACLC,QAAS,WACPd,EAAYV,EAASkB,SAJzB,4BAUA,wBACEI,UAAU,cACVC,KAAK,SACLC,QAAS,WACPjB,GAAaD,IAJjB,qBAUA,wBACEgB,UAAU,iCACVC,KAAK,SACLC,QAAS,WACPjB,GAAY,GACZG,EAAYV,EAASQ,OALzB,sBAYF,oBAAIc,UAAU,QAAd,SACGX,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,eC3HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aebd9a32.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPABET = 'ALPABET',\n  LENGTH = 'LENGTH',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n      && (\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => {\n            setStarted(!isStarted);\n          }}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted\n      && (\n        <>\n          <div className=\"App__buttons\">\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.ALPABET);\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.LENGTH);\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={() => {\n                setReversed(!isReversed);\n              }}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"App__button App__button--reset\"\n              type=\"button\"\n              onClick={() => {\n                setReversed(false);\n                setSortType(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            {visibleGoods.map(good => (\n              <li\n                className=\"Goods__item\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}